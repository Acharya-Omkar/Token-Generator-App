{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/omkar/Desktop/REACT/TokenGenerator/token-generator/src/LandingPage.js\";\nimport React from \"react\";\nimport Box from \"./Box\";\nimport \"./LandingPage.css\";\n\nclass LandingPage extends React.Component {\n  constructor() {\n    super();\n\n    this.generate = () => {\n      this.setState({\n        total: this.state.totalInput1 + this.state.totalInput2\n      });\n    };\n\n    this.showValues = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      name: \"React\",\n      total: 0,\n      totalInput1: \"\",\n      totalInput2: \"\",\n      show: false\n    };\n  }\n\n  render() {\n    const inputs1 = [];\n    const inputs2 = [];\n\n    for (let i = 1; i <= this.state.total; i++) {\n      inputs1.push( /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this) //   <input name={`input-${i}`} onChange={this.onChange} />\n      );\n    }\n\n    for (let i = 1; i <= this.state.total; i++) {\n      inputs2.push( /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) //   <input name={`input-${i}`} onChange={this.onChange} />\n      );\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Token Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number of blue tokens\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"redNum\",\n            max: \"10\",\n            onChange: e => this.setState({\n              totalInput1: e.target.value\n            }),\n            value: this.state.totalInput1,\n            placeholder: \"Enter Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number of red tokens\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\" //   name=\"blueNum\"\n            ,\n            max: \"10\",\n            onChange: e => this.setState({\n              totalInput2: e.target.value\n            }),\n            value: this.state.totalInput2,\n            placeholder: \"Enter Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.generate,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), inputs1, \" \", inputs2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this) // <div>\n    //   <input onChange={(e) => this.setState({ totalInput: e.target.value})} value={this.state.totalInput}  placeholder=\"Enter Number\" />\n    //   <button onClick={this.generate}>Generate</button>\n    //   <button onClick={this.clear}>Clear</button>\n    //   <br />\n    //   {inputs}\n    //    <br />\n    // </div>\n    ;\n  }\n\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/home/omkar/Desktop/REACT/TokenGenerator/token-generator/src/LandingPage.js"],"names":["React","Box","LandingPage","Component","constructor","generate","setState","total","state","totalInput1","totalInput2","showValues","show","onChange","event","target","name","value","render","inputs1","inputs2","i","push","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Box from \"./Box\";\nimport \"./LandingPage.css\";\n\nclass LandingPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"React\",\n      total: 0,\n      totalInput1: \"\",\n      totalInput2: \"\",\n      show: false,\n    };\n  }\n\n  generate = () => {\n    this.setState({\n      total: this.state.totalInput1 + this.state.totalInput2,\n    });\n  };\n\n//   clear = () => {\n//     this.setState({\n//       total: this.state.totalInput,\n//     });\n//   };\n\n  showValues = () => {\n    this.setState({\n      show: true,\n    });\n  };\n\n  onChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const inputs1 = [];\n    const inputs2 = [];\n\n    for (let i = 1; i <= this.state.total; i++) {\n      inputs1.push(\n        <Box />\n        //   <input name={`input-${i}`} onChange={this.onChange} />\n      );\n     \n    }\n    for (let i = 1; i <= this.state.total; i++) {\n    \n        inputs2.push(\n          <Box />\n          //   <input name={`input-${i}`} onChange={this.onChange} />\n        );\n      }\n    return (\n      <div className=\"header\">\n        <h1 className=\"header__title\">Token Generator</h1>\n        <form className=\"form\">\n          <label>\n            Number of blue tokens\n            <input\n              type=\"number\"\n                name=\"redNum\"\n                max=\"10\"\n              onChange={(e) => this.setState({ totalInput1: e.target.value })}\n              value={this.state.totalInput1}\n              placeholder=\"Enter Number\"\n            />\n          </label>\n          <label>\n            Number of red tokens\n            <input\n              type=\"number\"\n              //   name=\"blueNum\"\n              max=\"10\"\n                onChange={(e) => this.setState({ totalInput2: e.target.value })}\n                value={this.state.totalInput2}\n              placeholder=\"Enter Number\"\n            />\n          </label>\n          \n        </form>\n        <div className=\"form__button\">\n            <button>Clear</button>\n            <button onClick={this.generate}>Generate</button>\n           \n            {inputs1} {inputs2}\n          \n          </div>\n      </div>\n      // <div>\n      //   <input onChange={(e) => this.setState({ totalInput: e.target.value})} value={this.state.totalInput}  placeholder=\"Enter Number\" />\n      //   <button onClick={this.generate}>Generate</button>\n      //   <button onClick={this.clear}>Clear</button>\n      //   <br />\n      //   {inputs}\n      //    <br />\n      // </div>\n    );\n  }\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}